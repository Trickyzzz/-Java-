
public class BitOperator{
    public static void  main(String[] args){
        //按位运算：~ & | ^
        //所有的运算都是对补码进行的
        //首先得到2的补码：
        //int ―― 4字节 正数的三码合一，得到2的补码：00000000 00000000 00000000 00000010
        //取反：11111111 11111111 11111111 11111101
        //得到该数的补码，需要转换回原码：减一，符号位不变取反
        //10000000 00000000 00000000 00000011 ――> -3
        System.out.println(~2);//-3
        /*
        2补码：00000000 00000000 00000000 00000010
        3补码：00000000 00000000 00000000 00000011
        */
        System.out.println(2^3);//00000000 00000000 00000000 00000001――》1
        System.out.println(2|3);//00000000 00000000 00000000 00000011――》3
        //-5原码:10000000 00000000 00000000 00000101――》补码：11111111 11111111 11111111 11111011
        System.out.println(~-5);//00000000 00000000 00000000 00000100；――》4
        /*  13补码:00000000 00000000 00000000 00001101
            7补码:00000000 00000000 00000000 00000111
        */
        System.out.println(13&7);//00000000 00000000 00000000 00000101――》5
        System.out.println(5|4);//――》00000000 0000000 00000000 00000101――》5
        //System.out.println(-3^3);
    }
}

